[CRUN]
# Run configurations
create_hdf5 = True
build_new_model = True
train_model = True
cross_validation = False
visualize = False

[PATH]
# Input data folder locations
data_dir: ../..
train_dir: ${PATH:data_dir}/dataset_ae
train_seg_dir: ${PATH:data_dir}/dataset_ae
test_dir: ${PATH:data_dir}/testset_ae
test_seg_dir: ${PATH:data_dir}/testset_ae

# Output data folder locations
output_dir = ./run
figures_dir = ${PATH:output_dir}/figures
hdf5data_dir = ${PATH:output_dir}/hdf5_data
newmodel_dir = ${PATH:output_dir}/new_model
pretrained_dir = ${PATH:output_dir}/pretrained_models
logging_dir = ${PATH:output_dir}/tensorboard_logs'
pickle_dir = ${PATH:output_dir}/pickle_files
mhd_dir = ${PATH:output_dir}/mhd_predictions

#output files
hdf5_train: ${PATH:hdf5data_dir}/train.hdf5
hdf5_test: ${PATH:hdf5data_dir}/test.hdf5
hdf5_pred: ${PATH:hdf5data_dir}/pred.hdf5
kfold_ids_file: ${PATH:hdf5data_dir}/kfold_ids.pkl
newmodel_file: ${PATH:hdf5data_dir}/3d_unet_model.h5
trained_model: ${PATH:hdf5data_dir}/3d_unet_model.h5

[DATA]
# Data configurations for input data
grid_size = [64, 64, 24]
grid_resolution = [1, 1, 1]
padding = [0, 0, 0]
resample = False
crop = False
normalize = False

n_labels = 1
label_reassign = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
label_names = ['background', 'pancreas', 'liver']

[AUGMENTATION]
# Augmentation parameters, training data will be distorted on the fly so as to avoid over-fitting.
# Data will be randomly rotated in the xy plane, by a maximum angle rotate_max_angle
augment_data = True
augment_rotate = True
augment_prob_rotate = 0.3
augment_rotate_max_angle = 10
# Data will be randomly shifted along the x, y and z axis, by a maximum distance augment_shift_max_mm (in mm)
augment_shift = True
augment_prob_shift = 0.2
augment_shift_max_vox = 3
# Data will be flipped in the x-dimension
augment_flip = False
augment_prob_flip = 0.1
# Data will be randomly zoomed in or out, by a factor between 1 - dzoom_max and 1 + dzoom_max
augment_zoom = True
augment_prob_zoom = 0.3
augment_dzoom_max = 0.1
# Data will be randomly deformed by elastic deformation, with parameters
# - alpha_m: length scale of deformation in mm
# - sigma: standard deviation for Gaussian kernel
# Note: larger sigma means smaller deformations!
augment_elastic_deformation = False
augment_prob_deform = 0.3
augment_alpha_mm = 35
augment_sigma = 6

[TRAINING]
# Training run hyper-parameters
n_epochs = 2500
batch_size = 4
initial_learning_rate = 0.0001
decay_learning_rate_every_x_epochs = ${TRAINING:n_epochs}
learning_rate_drop = 0.1
cross_validation_kfold = 5
validation_split = 0.8
loss_weight_factors =  [1., 10., 1.]

[MODEL]
pool_size = [2, 2, 2]









